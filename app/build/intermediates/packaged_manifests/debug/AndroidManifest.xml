<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.mesibo.messenger"
    android:versionCode="1"
    android:versionName="1.0.0" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="34" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission
        android:name="android.permission.READ_CONTACTS"
        android:required="false" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
    <uses-permission
        android:name="android.permission.READ_PHONE_STATE"
        android:required="false" />
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.STORAGE" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.ACTION_MANAGE_OVERLAY_PERMISSION" />

    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.bluetooth"
        android:required="false" />

    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.MANAGE_OWN_CALLS" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.VIBRATE" /> <!-- some device having issues with this hence we keeping it options -->
    <!--
    play store asks for video and explanation if this permission is declared.
    We are using this only for legacy notification or androidtv in function playIncomingNotification
    so it can be declared in app
    -->
    <!-- <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" /> -->
    <!--
    user need to enable this for screen sharing, since many of our users do not use screen sharing,
    we are disabling by default
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PROJECTION" />
    -->
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.camera.autofocus"
        android:required="false" />
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY" />
    <uses-permission android:name="com.android.alarm.permission.SET_ALARM" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" />

    <application
        android:name="org.mesibo.messenger.MainApplication"
        android:allowBackup="false"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@drawable/smartphone"
        android:label="Mesibo Messenger"
        android:requestLegacyExternalStorage="true"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme" >
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="GOOGLE_MAP_KEY" />

        <activity
            android:name="org.mesibo.messenger.EditProfileActivity"
            android:theme="@style/EditProfileTheme"
            android:windowSoftInputMode="adjustPan" />
        <activity
            android:name="org.mesibo.messenger.StartUpActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:launchMode="singleTop"
            android:noHistory="true"
            android:screenOrientation="portrait"
            android:theme="@style/ShowUserProfileTheme"
            android:windowSoftInputMode="stateAlwaysHidden" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity
            android:name="org.mesibo.messenger.AppSettings.SettingsActivity"
            android:theme="@style/SettingsTheme"
            android:windowSoftInputMode="adjustPan" />

        <receiver
            android:name="org.mesibo.messenger.AutoStart"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="org.mesibo.messenger.restart" />
            </intent-filter>
        </receiver>

        <!-- Firebase Notifications -->
        <service
            android:name="org.mesibo.messenger.fcm.MesiboGcmListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="org.mesibo.messenger.fcm.MesiboInstanceIDListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>
        <service
            android:name="org.mesibo.messenger.fcm.MesiboRegistrationIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="org.mesibo.messenger.fcm.MesiboJobIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity
            android:name="com.mesibo.uihelper.LoginActivity"
            android:theme="@style/WelcomeTheme" />
        <activity
            android:name="com.mesibo.uihelper.ProductTourActivity"
            android:screenOrientation="portrait"
            android:theme="@style/WelcomeTheme" />
        <activity
            android:name="com.mesibo.messaging.MesiboUserListActivity"
            android:theme="@style/MesiboAppTheme"
            android:windowSoftInputMode="adjustNothing" />
        <activity
            android:name="com.mesibo.messaging.MesiboMessagingActivity"
            android:theme="@style/MesiboAppTheme" />
        <activity
            android:name="com.mesibo.messaging.CreateNewGroupActivity"
            android:theme="@style/CreateGroupTheme" />
        <activity
            android:name="com.mesibo.messaging.MesiboEndToEndEncryptionActivity"
            android:theme="@style/MesiboAppTheme" />
        <activity
            android:name="com.mesibo.messaging.MesiboMapActivity"
            android:theme="@style/MesiboAppTheme" />
        <activity
            android:name="com.mesibo.messaging.MesiboShowProfileActivity"
            android:theme="@style/MesiboAppTheme" />
        <activity
            android:name="com.mesibo.calls.ui.CallLogs.CallLogsActivity"
            android:configChanges="orientation|keyboardHidden"
            android:screenOrientation="portrait"
            android:theme="@style/CallLogsActivityTheme"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="com.mesibo.calls.ui.CallLogs.CallLogsDetailsActivity"
            android:configChanges="orientation|keyboardHidden"
            android:screenOrientation="portrait"
            android:theme="@style/CallLogsDetailsActivityTheme"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="com.mesibo.mediapicker.AlbumStartActivity"
            android:exported="true"
            android:label="@string/title_activity_facebook_album"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name="com.mesibo.mediapicker.zoomVuPictureActivity"
            android:exported="true"
            android:label="@string/title_activity_zoomPictureVu"
            android:theme="@style/ImageEditorTheme" />
        <activity
            android:name="com.mesibo.mediapicker.ImageEditor"
            android:exported="true"
            android:theme="@style/ImageEditorTheme"
            android:windowSoftInputMode="stateHidden|adjustResize" />
        <!--
        if we change authorities here, we need to change in getAuthority() in MediaPicker.java too
        Also, we are using same authority in EndToEndEncryptionFragment
        -->
        <provider
            android:name="com.mesibo.mediapicker.MediaPickerFileProvider"
            android:authorities="org.mesibo.messenger.com.mesibo.mediapicker"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <service
            android:name="com.mesibo.calls.api.MesiboScreenSharingService"
            android:enabled="true"
            android:exported="true"
            android:foregroundServiceType="mediaProjection" />
        <service
            android:name="com.mesibo.calls.api.MesiboRingtoneService"
            android:enabled="true"
            android:exported="true"
            android:foregroundServiceType="mediaPlayback" />

        <receiver
            android:name="com.mesibo.calls.api.MesiboCallsReceiver"
            android:enabled="true"
            android:exported="true" />

        <activity
            android:name="com.mesibo.calls.api.MesiboCallActivity"
            android:configChanges="orientation|smallestScreenSize|screenSize|screenLayout"
            android:screenOrientation="fullUser"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="com.mesibo.calls.api.ui.MesiboDefaultCallActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@style/Theme.MesiboCallActivityLight"
            android:windowActionBar="false"
            android:windowFullscreen="true"
            android:windowNoTitle="true"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="com.mesibo.calls.api.ui.MesiboDefaultGroupCallActivity"
            android:configChanges="orientation|keyboardHidden"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.MesiboCallActivityLight"
            android:windowActionBar="false"
            android:windowFullscreen="true"
            android:windowNoTitle="true"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="com.mesibo.calls.api.ui.MesiboJoinRoomActivity"
            android:label="@string/app_name"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.MesiboCallActivityLight"
            android:windowActionBar="false"
            android:windowFullscreen="true"
            android:windowNoTitle="true"
            android:windowSoftInputMode="stateAlwaysHidden" >
        </activity>

        <service
            android:name="com.mesibo.calls.api.MesiboConnectionService"
            android:exported="true"
            android:label="MesiboConnectionService"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE" >
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
        </service>

        <activity
            android:name="com.mesibo.api.MesiboPermissionsActivity"
            android:theme="@style/Theme.AppCompat.Translucent" >
        </activity>

        <service
            android:name="com.mesibo.api.MesiboService"
            android:enabled="true"
            android:exported="false" >
        </service>
        <service
            android:name="com.mesibo.api.MesiboBackgroundJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <!--
        <receiver
            android:name=".NetworkStateReceiver"
            android:enabled="true"
            android:exported="false"
            >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        -->
        <!-- https://stackoverflow.com/questions/17759041/permission-denial-broadcasting-intent-is-not-exported -->
        <receiver
            android:name="com.mesibo.api.GenericReceiver"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
                <action android:name="android.intent.action.ACTION_BATTERY_CHANGED" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.intent.action.SCREEN_ON" />
                <action android:name="android.intent.action.SCREEN_OFF" />
                <action android:name="android.intent.action.ACTION_SHUTDOWN" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.mesibo.api.MesiboFileProvider"
            android:authorities="org.mesibo.messenger.mesibofileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <activity
            android:name="com.google.android.libraries.places.widget.AutocompleteActivity"
            android:exported="false"
            android:label="@string/places_autocomplete_label"
            android:theme="@style/PlacesAutocompleteOverlay"
            android:windowSoftInputMode="adjustResize" >
        </activity>
        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
            Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />
        <!--
             FirebaseMessagingService performs security checks at runtime,
             but set to not exported to explicitly avoid allowing another app to call it.
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="false" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver> <!-- Needs to be explicitly declared on P+ -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="org.mesibo.messenger.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery"
            android:exported="false" >
            <meta-data
                android:name="backend:com.google.android.datatransport.cct.CctBackendFactory"
                android:value="cct" />
        </service>
        <service
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" >
        </service>

        <receiver
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver"
            android:exported="false" />

        <provider
            android:name="androidx.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="org.mesibo.messenger.lifecycle-process"
            android:exported="false"
            android:multiprocess="true" />
    </application>

</manifest>